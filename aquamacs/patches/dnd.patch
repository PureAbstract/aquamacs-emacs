Index: lisp/term/mac-win.el
===================================================================
RCS file: /sources/emacs/emacs/lisp/term/Attic/mac-win.el,v
retrieving revision 1.88.2.11
diff -c -r1.88.2.11 mac-win.el
*** lisp/term/mac-win.el	23 Apr 2008 08:56:55 -0000	1.88.2.11
--- lisp/term/mac-win.el	10 Aug 2008 13:05:27 -0000
***************
*** 1729,1738 ****
    (let ((ae (mac-event-ae event)))
      (dolist (file-name (mac-ae-list ae nil 'undecoded-file-name))
        (if file-name
! 	  (dnd-open-local-file
! 	   (concat "file://"
! 		   (mapconcat 'url-hexify-string
! 			      (split-string file-name "/") "/")) nil)))
      (let ((selection-range (mac-ae-selection-range ae))
  	  (search-text (mac-ae-text-for-search ae)))
        (cond (selection-range
--- 1729,1743 ----
    (let ((ae (mac-event-ae event)))
      (dolist (file-name (mac-ae-list ae nil 'undecoded-file-name))
        (if file-name
! 	  (with-selected-window
! 	      (if (special-display-p (buffer-name (window-buffer (selected-window))))
! 		  ;; are we in a special display window?
! 		  (previous-window nil 'no 'visible)
! 		(selected-window))
! 	    (dnd-open-local-file
! 	     (concat "file://"
! 		     (mapconcat 'url-hexify-string
! 			      (split-string file-name "/") "/")) nil))))
      (let ((selection-range (mac-ae-selection-range ae))
  	  (search-text (mac-ae-text-for-search ae)))
        (cond (selection-range
***************
*** 2097,2105 ****
  				      (concat msg active-input-string)))
  	      (setq msg active-input-string))
  	    (message "%s" msg)
  	    (overlay-put mac-ts-active-input-overlay 'before-string nil))
  	(move-overlay mac-ts-active-input-overlay
! 		      (point) (point) (current-buffer))
  	(overlay-put mac-ts-active-input-overlay 'before-string
  		     active-input-string))
        (mac-unread-string (funcall decode-fun confirmed coding)))
--- 2102,2120 ----
  				      (concat msg active-input-string)))
  	      (setq msg active-input-string))
  	    (message "%s" msg)
+ 	    (overlay-put mac-ts-active-input-overlay 'face nil)
  	    (overlay-put mac-ts-active-input-overlay 'before-string nil))
+ 	(overlay-put mac-ts-active-input-overlay 'face nil)
+ 	(let ((overlays (overlays-in (point) (point)))
+ 	      (face nil))
+ 	  (while overlays
+ 	    (setq face (overlay-get (car overlays) 'face))
+ 	    (and face
+ 		 (overlay-put mac-ts-active-input-overlay 'face face))
+ 	    (setq overlays (cdr overlays))))
  	(move-overlay mac-ts-active-input-overlay
! 		      (point) (+ (point) (length active-input-string))
! 		      (current-buffer))
  	(overlay-put mac-ts-active-input-overlay 'before-string
  		     active-input-string))
        (mac-unread-string (funcall decode-fun confirmed coding)))

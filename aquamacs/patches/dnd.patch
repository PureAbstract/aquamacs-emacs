this patch will select a more appropriate window to show the opened file in.  It also works with non-existent files, unlike the original.
Index: mac-win.el
===================================================================
RCS file: /sources/emacs/emacs/lisp/term/Attic/mac-win.el,v
retrieving revision 1.88.2.11
diff -c -r1.88.2.11 mac-win.el
*** lisp/term/mac-win.el	23 Apr 2008 08:56:55 -0000	1.88.2.11
--- lisp/term/mac-win.el	23 Aug 2008 02:20:42 -0000
***************
*** 1729,1738 ****
    (let ((ae (mac-event-ae event)))
      (dolist (file-name (mac-ae-list ae nil 'undecoded-file-name))
        (if file-name
! 	  (dnd-open-local-file
! 	   (concat "file://"
! 		   (mapconcat 'url-hexify-string
! 			      (split-string file-name "/") "/")) nil)))
      (let ((selection-range (mac-ae-selection-range ae))
  	  (search-text (mac-ae-text-for-search ae)))
        (cond (selection-range
--- 1729,1750 ----
    (let ((ae (mac-event-ae event)))
      (dolist (file-name (mac-ae-list ae nil 'undecoded-file-name))
        (if file-name
! 	  (let ((sel-win (or (minibuffer-selected-window) 
! 			     (selected-window))))
! 	  (with-selected-window
! 	      (if (and (window-live-p sel-win) 
! 		       (special-display-p 
! 			(or (buffer-name 
! 			     (window-buffer sel-win)) "")))
! 		  ;; are we in a special display window?
! 		  (progn (select-frame-set-input-focus 
! 			  (window-frame 
! 			   (previous-window nil 'no 'visible))) 
! 			 (previous-window nil 'no 'visible))
! 		sel-win)
! 	    ;; unlike dnd-open-local-file, find-file
! 	    ;; is happy with new files
! 	    (find-file file-name)))))
      (let ((selection-range (mac-ae-selection-range ae))
  	  (search-text (mac-ae-text-for-search ae)))
        (cond (selection-range

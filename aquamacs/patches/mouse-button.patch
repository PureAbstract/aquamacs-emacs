fix modifier corrections during mouse-1/2/3
fix mouse localization in Carbon: has effects on
   mouse events (e.g., dragging/tracking) and mouse-(pixel-)position
fix target frame for mouse wheel events

(C) 2007,2008 David Reitter

diff -c -r1.1.2.1 mactoolbox.c
*** src/mactoolbox.c	6 Apr 2008 01:54:44 -0000	1.1.2.1
--- src/mactoolbox.c	6 Apr 2008 14:02:29 -0000
***************
*** 327,339 ****
  	result = CallNextEventHandler (next_handler, event);
  	if (result != eventNotHandledErr || read_socket_inev == NULL)
  	  break;
! 
! 	f = mac_focus_frame (&one_mac_display_info);
! 
  	err = GetEventParameter (event, kEventParamWindowRef, typeWindowRef,
  				 NULL, sizeof (WindowRef), NULL, &wp);
  	if (err != noErr
! 	    || wp != FRAME_MAC_WINDOW (f))
  	  break;
  
  	err = GetEventParameter (event, kEventParamMouseWheelAxis,
--- 329,351 ----
  	result = CallNextEventHandler (next_handler, event);
  	if (result != eventNotHandledErr || read_socket_inev == NULL)
  	  break;
!  
! 	Point pt;
! 	WindowRef window;
! 
! 	GetGlobalMouse (&pt); 
! 	WindowPartCode wpc = FindWindow (pt, &window);
! 	if (wpc >= inContent && window != NULL) 
! 	  /* Normally, wheel events should go to the frame under the mouse */
! 	    f = mac_window_to_frame (window);
! 	else 
! 	    /* Default: the focused frame */
! 	    f = mac_focus_frame (&one_mac_display_info);
! 	
  	err = GetEventParameter (event, kEventParamWindowRef, typeWindowRef,
  				 NULL, sizeof (WindowRef), NULL, &wp);
  	if (err != noErr
! 	  || wp != FRAME_MAC_WINDOW (f)) 
  	  break;
  
  	err = GetEventParameter (event, kEventParamMouseWheelAxis,
***************
*** 3012,3018 ****
    if (!NILP (Vmac_emulate_three_button_mouse) &&
        (class == kEventClassMouse || class == kEventClassCommand))
      {
!       mods &= ~(optionKey | cmdKey);
      }
    return mac_to_emacs_modifiers (mods, 0);
  }
--- 3026,3041 ----
    if (!NILP (Vmac_emulate_three_button_mouse) &&
        (class == kEventClassMouse || class == kEventClassCommand))
      {
!       /* Only for a true mouse-1 */
!       EventMouseButton button = kEventMouseButtonPrimary;
!       GetEventParameter (eventRef, kEventParamMouseButton, 
! 			 typeMouseButton, NULL,
! 			 sizeof (EventMouseButton), NULL, &button);
!       if (button == kEventMouseButtonPrimary) 
! 	{
! 	  mods &= ~(((EQ (Vmac_emulate_three_button_mouse, intern ("control")))
! 		     ? controlKey : optionKey) | cmdKey);
! 	}
      }
    return mac_to_emacs_modifiers (mods, 0);
  }
diff -c -r1.198 macterm.c
*** src/macterm.c	10 Dec 2006 23:16:11 -0000	1.198
--- src/macterm.c	12 Dec 2006 15:51:21 -0000
***************
*** 1562,1572 ****
  }
  #endif	/* !USE_CG_DRAWING */
  
  
  /* Mac replacement for XCopyArea: used only for scrolling.  */
  
  #if TARGET_API_MAC_CARBON
! /* Defined in mactoolbox.c.  */
  extern void mac_scroll_area P_ ((struct frame *, GC, int, int,
  				 unsigned int, unsigned int, int, int));
  #else  /* not TARGET_API_MAC_CARBON */
--- 1686,1698 ----
  }
  #endif	/* !USE_CG_DRAWING */
  
+ /* defined in mactoolbox.c */
+ #define mac_window_to_frame(wp) (((mac_output *) GetWRefCon (wp))->mFP)
  
  /* Mac replacement for XCopyArea: used only for scrolling.  */
  
  #if TARGET_API_MAC_CARBON
! /* Defined in either mactoolbox.c or macappkit.m.  */
  extern void mac_scroll_area P_ ((struct frame *, GC, int, int,
  				 unsigned int, unsigned int, int, int));
  #else  /* not TARGET_API_MAC_CARBON */
***************
*** 4547,4558 ****
  
        last_mouse_scroll_bar = Qnil;
  
!       if (FRAME_MAC_DISPLAY_INFO (*fp)->grabbed && last_mouse_frame
! 	  && FRAME_LIVE_P (last_mouse_frame))
! 	f1 = last_mouse_frame;
!       else
! 	f1 = mac_focus_frame (FRAME_MAC_DISPLAY_INFO (*fp));
! 
        if (f1)
  	{
  	  /* Ok, we found a frame.  Store all the values.
--- 4757,4779 ----
  
        last_mouse_scroll_bar = Qnil;
  
!       f1=NULL;
!       Point pt;
!       WindowRef window;
! 
!       GetGlobalMouse (&pt); 
! 
!       WindowPartCode wpc = FindWindow (pt, &window);
!       if (wpc >= inContent && window != NULL) {
! 	f1 = mac_window_to_frame (window);
!       }
!       if (!f1 || !FRAME_LIVE_P (f1)) {
! 	if (FRAME_MAC_DISPLAY_INFO (*fp)->grabbed && last_mouse_frame
! 	    && FRAME_LIVE_P (last_mouse_frame))
! 	    f1 = last_mouse_frame;
! 	else
! 	  f1 = mac_focus_frame (FRAME_MAC_DISPLAY_INFO (*fp));
!       }
        if (f1)
  	{
  	  /* Ok, we found a frame.  Store all the values.
***************
*** 8784,8794 ****
  {
    int result = 0;
    if (!NILP (Vmac_emulate_three_button_mouse)) {
!     int cmdIs3 = !EQ (Vmac_emulate_three_button_mouse, Qreverse);
!     if (modifiers & cmdKey)
!       result = cmdIs3 ? 2 : 1;
!     else if (modifiers & optionKey)
!       result = cmdIs3 ? 1 : 2;
    }
    return result;
  }
--- 8784,8804 ----
  {
    int result = 0;
    if (!NILP (Vmac_emulate_three_button_mouse)) {
!     if (EQ (Vmac_emulate_three_button_mouse, Qreverse))
!       {
! 	result = (modifiers & optionKey) ? ((modifiers & cmdKey) ? 3 : 2) : 
! 	  ((modifiers & cmdKey) ? 1 : 0);
!       }
!     else if (EQ (Vmac_emulate_three_button_mouse, Qcontrol))
!       {
! 	result = (modifiers & controlKey) ? ((modifiers & cmdKey) ? 3 : 2) : 
! 	  ((modifiers & cmdKey) ? 1 : 0);
!       }
!     else 
!       {
! 	result = (modifiers & optionKey) ? ((modifiers & cmdKey) ? 3 : 1) : 
! 	  ((modifiers & cmdKey) ? 2 : 0);
!       }
    }
    return result;
  }
***************
*** 11734,11747 ****
    DEFVAR_LISP ("mac-emulate-three-button-mouse",
  	       &Vmac_emulate_three_button_mouse,
      doc: /* *Specify a way of three button mouse emulation.
! The value can be nil, t, or the symbol `reverse'.
  A value of nil means that no emulation should be done and the modifiers
  should be placed on the mouse-1 event.
  t means that when the option-key is held down while pressing the mouse
  button, the click will register as mouse-2 and while the command-key
  is held down, the click will register as mouse-3.
  The symbol `reverse' means that the option-key will register for
! mouse-3 and the command-key will register for mouse-2.  */);
    Vmac_emulate_three_button_mouse = Qnil;
  
  #if USE_CARBON_EVENTS
--- 11753,11768 ----
    DEFVAR_LISP ("mac-emulate-three-button-mouse",
  	       &Vmac_emulate_three_button_mouse,
      doc: /* *Specify a way of three button mouse emulation.
! The value can be nil, t,  or one of the symbols `reverse' or `control'. 
  A value of nil means that no emulation should be done and the modifiers
  should be placed on the mouse-1 event.
  t means that when the option-key is held down while pressing the mouse
  button, the click will register as mouse-2 and while the command-key
  is held down, the click will register as mouse-3.
  The symbol `reverse' means that the option-key will register for
! mouse-3 and the command-key will register for mouse-2.  
! The symbol  `control' means that a click with the control-key held down 
! will register as mouse-3, and command-click will register as mouse-2.  */);
    Vmac_emulate_three_button_mouse = Qnil;
  
  #if USE_CARBON_EVENTS

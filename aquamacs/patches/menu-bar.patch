Rename buffers menu to Window and move it.
turn off key binding hint caching because it is buggy
remove some menu unneeded items

*** lisp/menu-bar.el	06 Apr 2008 12:51:37 +0100	1.302.2.11
--- lisp/menu-bar.el	25 Apr 2008 09:45:51 +0100	
***************
*** 50,65 ****
  ;; Force Help item to come last, after the major mode's own items.
  ;; The symbol used to be called `help', but that gets confused with the
  ;; help key.
! (setq menu-bar-final-items '(help-menu))
  
  (define-key global-map [menu-bar help-menu] (cons "Help" menu-bar-help-menu))
- (defvar menu-bar-tools-menu (make-sparse-keymap "Tools"))
- (define-key global-map [menu-bar tools] (cons "Tools" menu-bar-tools-menu))
  ;; This definition is just to show what this looks like.
  ;; It gets modified in place when menu-bar-update-buffers is called.
  (defvar global-buffers-menu-map (make-sparse-keymap "Buffers"))
  (define-key global-map [menu-bar buffer]
!   (cons "Buffers" global-buffers-menu-map))
  (defvar menu-bar-options-menu (make-sparse-keymap "Options"))
  (define-key global-map [menu-bar options]
    (cons "Options" menu-bar-options-menu))
--- 50,65 ----
  ;; Force Help item to come last, after the major mode's own items.
  ;; The symbol used to be called `help', but that gets confused with the
  ;; help key.
! (setq menu-bar-final-items '(buffer help-menu))
  
  (define-key global-map [menu-bar help-menu] (cons "Help" menu-bar-help-menu))
  ;; This definition is just to show what this looks like.
  ;; It gets modified in place when menu-bar-update-buffers is called.
  (defvar global-buffers-menu-map (make-sparse-keymap "Buffers"))
  (define-key global-map [menu-bar buffer]
!   (cons "Window" global-buffers-menu-map))
! (defvar menu-bar-tools-menu (make-sparse-keymap "Tools"))
! (define-key global-map [menu-bar tools] (cons "Tools" menu-bar-tools-menu))
  (defvar menu-bar-options-menu (make-sparse-keymap "Options"))
  (define-key global-map [menu-bar options]
    (cons "Options" menu-bar-options-menu))
***************
*** 428,437 ****
  (define-key menu-bar-goto-menu [separator-tags]
    '(menu-item "--"))
  
- (define-key menu-bar-goto-menu [end-of-buf]
-   '(menu-item "Goto End of Buffer" end-of-buffer))
- (define-key menu-bar-goto-menu [beg-of-buf]
-   '(menu-item "Goto Beginning of Buffer" beginning-of-buffer))
  (define-key menu-bar-goto-menu [go-to-pos]
    '(menu-item "Goto Buffer Position..." goto-char
  	      :help "Read a number N and go to buffer position N"))
--- 450,455 ----
***************
*** 648,662 ****
      ;; These are set with menu-bar-make-mm-toggle, which does not
      ;; put on a customized-value property.
      (dolist (elt '(line-number-mode column-number-mode size-indication-mode
! 		   cua-mode show-paren-mode transient-mark-mode
! 		   blink-cursor-mode display-time-mode display-battery-mode))
        (and (customize-mark-to-save elt)
  	   (setq need-save t)))
      ;; These are set with `customize-set-variable'.
!     (dolist (elt '(scroll-bar-mode
! 		   debug-on-quit debug-on-error
  		   tooltip-mode menu-bar-mode tool-bar-mode
! 		   save-place uniquify-buffer-name-style fringe-mode
  		   indicate-empty-lines indicate-buffer-boundaries
  		   case-fold-search
  		   current-language-environment default-input-method
--- 676,689 ----
      ;; These are set with menu-bar-make-mm-toggle, which does not
      ;; put on a customized-value property.
      (dolist (elt '(line-number-mode column-number-mode size-indication-mode
! 		   cua-mode show-paren-mode 
! 		   blink-cursor-mode display-time-mode))
        (and (customize-mark-to-save elt)
  	   (setq need-save t)))
      ;; These are set with `customize-set-variable'.
!     (dolist (elt '(debug-on-quit debug-on-error
  		   tooltip-mode menu-bar-mode tool-bar-mode
! 		   save-place fringe-mode
  		   indicate-empty-lines indicate-buffer-boundaries
  		   case-fold-search
  		   current-language-environment default-input-method
***************
*** 708,718 ****
  (define-key menu-bar-showhide-menu [linecolumn-separator]
    '("--"))
  
- (define-key menu-bar-showhide-menu [showhide-battery]
-   (menu-bar-make-mm-toggle display-battery-mode
- 			   "Battery Status"
- 			   "Display battery status information in mode line"))
- 
  (define-key menu-bar-showhide-menu [showhide-date-time]
    (menu-bar-make-mm-toggle display-time-mode
  			   "Time, Load and Mail"
--- 735,740 ----
***************
*** 883,932 ****
    (list 'menu-item "Fringe" menu-bar-showhide-fringe-menu
  	:visible `(display-graphic-p)))
  
- (defvar menu-bar-showhide-scroll-bar-menu (make-sparse-keymap "Scroll-bar"))
- 
- (define-key menu-bar-showhide-scroll-bar-menu [right]
-   '(menu-item "On the Right"
- 	      menu-bar-right-scroll-bar
- 	      :help "Scroll-bar on the right side"
- 	      :visible (display-graphic-p)
- 	      :button (:radio . (eq (cdr (assq 'vertical-scroll-bars
- 					       (frame-parameters))) 'right))))
- (defun menu-bar-right-scroll-bar ()
-   "Display scroll bars on the right of each window."
-   (interactive)
-   (customize-set-variable 'scroll-bar-mode 'right))
- 
- (define-key menu-bar-showhide-scroll-bar-menu [left]
-   '(menu-item "On the Left"
- 	      menu-bar-left-scroll-bar
- 	      :help "Scroll-bar on the left side"
- 	      :visible (display-graphic-p)
- 	      :button (:radio . (eq (cdr (assq 'vertical-scroll-bars
- 					       (frame-parameters))) 'left))))
- 
- (defun menu-bar-left-scroll-bar ()
-   "Display scroll bars on the left of each window."
-   (interactive)
-   (customize-set-variable 'scroll-bar-mode 'left))
- 
- (define-key menu-bar-showhide-scroll-bar-menu [none]
-   '(menu-item "None"
- 	      menu-bar-no-scroll-bar
- 	      :help "Turn off scroll-bar"
- 	      :visible (display-graphic-p)
- 	      :button (:radio . (eq (cdr (assq 'vertical-scroll-bars
- 					       (frame-parameters))) nil))))
- 
- (defun menu-bar-no-scroll-bar ()
-   "Turn off scroll bars."
-   (interactive)
-   (customize-set-variable 'scroll-bar-mode nil))
- 
- (define-key menu-bar-showhide-menu [showhide-scroll-bar]
-   (list 'menu-item "Scroll-bar" menu-bar-showhide-scroll-bar-menu
- 	:visible `(display-graphic-p)))
- 
  (define-key menu-bar-showhide-menu [showhide-tooltip-mode]
    (list 'menu-item "Tooltips" 'tooltip-mode
  	:help "Turn tooltips on/off"
--- 905,910 ----
***************
*** 996,1011 ****
                          (set-default
                           'save-place (not (symbol-value 'save-place)))))
  
- (define-key menu-bar-options-menu [uniquify]
-   (menu-bar-make-toggle toggle-uniquify-buffer-names uniquify-buffer-name-style
- 			"Use Directory Names in Buffer Names"
- 			"Directory name in buffer names (uniquify) %s"
- 			"Uniquify buffer names by adding parent directory names"
- 			(require 'uniquify)
- 			(setq uniquify-buffer-name-style
- 			      (if (not uniquify-buffer-name-style)
- 				  'forward))))
- 
  (define-key menu-bar-options-menu [edit-options-separator]
    '("--"))
  (define-key menu-bar-options-menu [cua-mode]
--- 974,979 ----
***************
*** 1015,1033 ****
  			   (:visible (or (not (boundp 'cua-enable-cua-keys))
  					 cua-enable-cua-keys))))
  
- (define-key menu-bar-options-menu [cua-emulation-mode]
-   (menu-bar-make-mm-toggle cua-mode
- 			   "Shift movement mark region (CUA)"
- 			   "Use shifted movement keys to set and extend the region."
- 			   (:visible (and (boundp 'cua-enable-cua-keys)
- 					  (not cua-enable-cua-keys)))))
- 
- (define-key menu-bar-options-menu [case-fold-search]
-   (menu-bar-make-toggle toggle-case-fold-search case-fold-search
- 	    "Case-Insensitive Search"
- 	    "Case-Insensitive Search %s"
- 	    "Globally ignore letter-case in search"))
- 
  (defun menu-bar-text-mode-auto-fill ()
    (interactive)
    (toggle-text-mode-auto-fill)
--- 983,988 ----
***************
*** 1056,1066 ****
    (menu-bar-make-mm-toggle show-paren-mode
  			   "Paren Match Highlighting"
  			   "Highlight matching/mismatched parentheses at cursor (Show Paren mode)"))
- (define-key menu-bar-options-menu [transient-mark-mode]
-   (menu-bar-make-mm-toggle transient-mark-mode
- 			   "Active Region Highlighting"
- 			   "Make text in active region stand out in color (Transient Mark mode)"
- 			   (:enable (not cua-mode))))
  
  
  ;; The "Tools" menu items
--- 1011,1016 ----
*** src/keyboard.c	25 Feb 2008 16:04:54 -0000	1.899.2.11
--- src/keyboard.c	25 Oct 2008 16:26:30 -0000
***************
*** 7686,7694 ****
    if (NILP (cachelist))
      {
        /* We have to create a cachelist.  */
!       CHECK_IMPURE (start);
!       XSETCDR (start, Fcons (Fcons (Qnil, Qnil), XCDR (start)));
!       cachelist = XCAR (XCDR (start));
        newcache = 1;
        tem = AREF (item_properties, ITEM_PROPERTY_KEYEQ);
        if (!NILP (keyhint))
--- 7718,7729 ----
    if (NILP (cachelist))
      {
        /* We have to create a cachelist.  */
!       /* With the introduction of where_is_cache, the computation
!          of equivalent key bindings is sufficiently fast that we
!          do not need to cache it here any more. */
!       /* CHECK_IMPURE (start);
!          XSETCDR (start, Fcons (Fcons (Qnil, Qnil), XCDR (start))); */
!       cachelist = Fcons (Qnil, Qnil);
        newcache = 1;
        tem = AREF (item_properties, ITEM_PROPERTY_KEYEQ);
        if (!NILP (keyhint))

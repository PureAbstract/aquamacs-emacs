Index: src/xdisp.c
===================================================================
RCS file: /sources/emacs/emacs/src/xdisp.c,v
retrieving revision 1.1089
diff -c -r1.1089 xdisp.c
*** src/xdisp.c	20 Apr 2006 23:03:03 -0000	1.1089
--- src/xdisp.c	21 Apr 2006 13:39:03 -0000
***************
*** 379,384 ****
--- 379,389 ----
  
  static int message_log_need_newline;
  
+ 
+ Lisp_Object Vinhibit_echo_area_messages;
+ Lisp_Object Vinhibit_message_logging;
+ 
+ 
  /* Three markers that message_dolog uses.
     It could allocate them itself, but that causes trouble
     in handling memory-full errors.  */
***************
*** 7396,7417 ****
    struct gcpro gcpro1;
  
    GCPRO1 (m);
!   clear_message (1,1);
!   cancel_echoing ();
  
    /* First flush out any partial line written with print.  */
!   message_log_maybe_newline ();
!   if (STRINGP (m))
      {
!       char *buffer;
!       USE_SAFE_ALLOCA;
  
!       SAFE_ALLOCA (buffer, char *, nbytes);
!       bcopy (SDATA (m), buffer, nbytes);
!       message_dolog (buffer, nbytes, 1, multibyte);
!       SAFE_FREE ();
      }
!   message3_nolog (m, nbytes, multibyte);
  
    UNGCPRO;
  }
--- 7401,7430 ----
    struct gcpro gcpro1;
  
    GCPRO1 (m);
!   if (NILP(Vinhibit_echo_area_messages))
!     {
!       clear_message (1,1);
!       cancel_echoing ();
!     }
  
    /* First flush out any partial line written with print.  */
!   if (NILP(Vinhibit_message_logging))
      {
!       message_log_maybe_newline ();
!       if (STRINGP (m))
! 	{
! 	  char *buffer;
! 	  USE_SAFE_ALLOCA;
  
! 	  SAFE_ALLOCA (buffer, char *, nbytes);
! 	  bcopy (SDATA (m), buffer, nbytes);
! 	  message_dolog (buffer, nbytes, 1, multibyte);
! 	  SAFE_FREE ();
! 	}
      }
!   /* Show message in echo area */
!   if (NILP(Vinhibit_echo_area_messages))
!     message3_nolog (m, nbytes, multibyte);
  
    UNGCPRO;
  }
***************
*** 23874,23879 ****
--- 23887,23900 ----
      doc: /* Non-nil means don't free realized faces.  Internal use only.  */);
    inhibit_free_realized_faces = 0;
  
+   DEFVAR_LISP ("inhibit-echo-area-messages", &Vinhibit_echo_area_messages,
+     doc: /* Do not show echo area messages.  */);
+   Vinhibit_echo_area_messages = Qnil;
+ 
+   DEFVAR_LISP ("inhibit-message-logging", &Vinhibit_message_logging,
+     doc: /* Do not log echo area messages.  */);
+   Vinhibit_message_logging = Qnil;
+ 
  #if GLYPH_DEBUG
    DEFVAR_BOOL ("inhibit-try-window-id", &inhibit_try_window_id,
  	       doc: /* Inhibit try_window_id display optimization.  */);

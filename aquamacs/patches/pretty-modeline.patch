*** lisp/faces.el	06 Apr 2008 12:51:37 +0100	1.370.2.8
--- lisp/faces.el	06 May 2008 23:07:32 +0100	
***************
*** 2084,2089 ****
--- 2084,2096 ----
    :group 'mode-line-faces
    :group 'basic-faces)
  
+ (defface mode-line-mule-info
+   '((t (:family "sansserif")))
+   "Face used for MULE parts of the mode line."
+   :version "22.1"
+   :group 'mode-line-faces
+   :group 'basic-faces)
+ 
  ;; Make `modeline' an alias for `mode-line', for compatibility.
  (put 'modeline 'face-alias 'mode-line)
  (put 'modeline-inactive 'face-alias 'mode-line-inactive)
*** lisp/bindings.el	7 Jan 2008 02:45:03 -0000	1.178.2.5
--- lisp/bindings.el	6 May 2008 22:07:59 -0000
***************
*** 174,179 ****
--- 174,180 ----
    `(""
      (current-input-method
       (:propertize ("" current-input-method-title)
+ 		  face mode-line-mule-info-face
  		  help-echo (concat
  			     "Input method: "
  			     current-input-method
***************
*** 182,187 ****
--- 183,189 ----
  		  mouse-face mode-line-highlight))
      ,(propertize
        "%z"
+       'face 'mode-line-mule-info-face
        'help-echo
        #'(lambda (window object point)
  	  (with-current-buffer (window-buffer window)
***************
*** 273,290 ****
      map) "\
  Keymap to display on minor modes.")
  
  (let* ((help-echo
  	;; The multi-line message doesn't work terribly well on the
  	;; bottom mode line...  Better ideas?
  	;; 	  "\
  	;; mouse-1: select window, mouse-2: delete others, mouse-3: delete,
  	;; drag-mouse-1: resize, C-mouse-2: split horizontally"
! 	"mouse-1: select (drag to resize), mouse-2 = C-x 1, mouse-3 = C-x 0")
!        (dashes (propertize "--" 'help-echo help-echo))
         (standard-mode-line-format
  	(list
  	 "%e"
! 	 (propertize "-" 'help-echo help-echo)
  	 'mode-line-mule-info
  	 'mode-line-modified
  	 'mode-line-frame-identification
--- 275,297 ----
      map) "\
  Keymap to display on minor modes.")
  
+ (defvar command-line-processed nil)
+ (defvar before-init-hook nil)
+ (eval-at-startup ;; because of window-system
  (let* ((help-echo
  	;; The multi-line message doesn't work terribly well on the
  	;; bottom mode line...  Better ideas?
  	;; 	  "\
  	;; mouse-1: select window, mouse-2: delete others, mouse-3: delete,
  	;; drag-mouse-1: resize, C-mouse-2: split horizontally"
! 	"mouse-1: select (drag to resize), mouse-2: delete others, mouse-3: delete this")
!        (lotsofdashes (if window-system (make-string 100 32) "%-"))
!        (dash (propertize (if window-system " " "-") 'help-echo help-echo))
!        (dashes (propertize (if window-system "  " "--") 'help-echo help-echo))
         (standard-mode-line-format
  	(list
  	 "%e"
! 	 (propertize dash 'help-echo help-echo)
  	 'mode-line-mule-info
  	 'mode-line-modified
  	 'mode-line-frame-identification
***************
*** 296,302 ****
  	 'mode-line-modes
  	 `(which-func-mode ("" which-func-format ,dashes))
  	 `(global-mode-string (,dashes global-mode-string))
! 	 (propertize "-%-" 'help-echo help-echo)))
         (standard-mode-line-modes
  	(list
  	 (propertize "%[(" 'help-echo help-echo)
--- 303,309 ----
  	 'mode-line-modes
  	 `(which-func-mode ("" which-func-format ,dashes))
  	 `(global-mode-string (,dashes global-mode-string))
! 	 (propertize (concat dash lotsofdashes) 'help-echo help-echo)))
         (standard-mode-line-modes
  	(list
  	 (propertize "%[(" 'help-echo help-echo)
***************
*** 313,319 ****
  		     'mouse-face 'mode-line-highlight
  		     'local-map (make-mode-line-mouse-map
  				 'mouse-2 #'mode-line-widen))
! 	 (propertize ")%]--" 'help-echo help-echo)))
         (standard-mode-line-position
  	`((-3 ,(propertize "%p" 'help-echo help-echo))
  	  (size-indication-mode
--- 320,326 ----
  		     'mouse-face 'mode-line-highlight
  		     'local-map (make-mode-line-mouse-map
  				 'mouse-2 #'mode-line-widen))
! 	 (propertize (concat ")%]" dashes) 'help-echo help-echo)))
         (standard-mode-line-position
  	`((-3 ,(propertize "%p" 'help-echo help-echo))
  	  (size-indication-mode
***************
*** 335,341 ****
  
    (setq-default mode-line-position standard-mode-line-position)
    (put 'mode-line-position 'standard-value
!        (list `(quote ,standard-mode-line-position))))
  
  (defvar mode-line-buffer-identification-keymap
    ;; Add menu of buffer operations to the buffer identification part
--- 342,348 ----
  
    (setq-default mode-line-position standard-mode-line-position)
    (put 'mode-line-position 'standard-value
!        (list `(quote ,standard-mode-line-position)))))
  
  (defvar mode-line-buffer-identification-keymap
    ;; Add menu of buffer operations to the buffer identification part

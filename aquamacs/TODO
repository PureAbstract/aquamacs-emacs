Some Aquamacs ideas
--------------------------------------------------------
feel free to add your own!


* Printing
DavidReitter: WYSIWYG printing show be supported. 
the original OS X print dialogs / drivers / previews should be used.
this means that printing needs to be done via ATSUI on C level,
or somehow output to PDF (then have Preview.app handle the printing).

PS2PDF solutions are not acceptable: they don't work (lacking fonts), or require Ghostscript (huge) to be installed.

  
* A better Buffers menu
DavidReitter: I think it would be a nice thing to structure all the buffers, similar to what msb-mode does. However, msb-mode creates submenus for each category, which is inefficient from a UI point of view - I want all buffers visible in the menu, but separated with divider lines and maybe with a greyed-out title. One could take msb and extend it so that it can do that. Then, move the frame-related stuff out of the File menu and combine it with the Buffers menu, so that we have the equivalent of a normal Windows menu on the Mac. It'd be good if there were functions that 'tile' frames, minimize and zoom them (maybe). But that's lower priority.


* A better Fonts menu (1)
DavidReitter: Someone needs to figure out how to put the Fonts into a proper sub-menu.


* A better Fonts menu (2)
DavidReitter: Someone needs to figure out how to create fontsets that include all compatible fonts for different charsets.

* A better Fonts menu (3)
DavidReitter: Someone needs to write a Carbon function that brings up the standard OS X font dialog and then takes the user's choice and converts it into a fontset usable by Emacs.


* Customization of Mode-specific themes
DavidReitter: Someone knowledgable in customization buffers could figure out how to comfortably customize the aquamacs-mode-specific-default-themes variable.


* Command-modifier character in menus (and everywhere else)
DavidReitter: We map the Command modifier to hyper, which results in it being described as 'H-'. At least in the menus, we want it to be a nice standard Apple-Command sign. Right now this is done by modifying the text of the menu items, which is quite a kludge. Also the keyboard shortcuts in the menus are not properly aligned, which looks ugly and is more difficult to read. Fixing this might be a bit of a challenge, and definitely something for a Carbon/C hacker.


* Modifier key patch
DavidReitter: change effect of mac-pass-option-to-system to only do it in cases where the option key actually modifies the given key. thus, we can preserve the assigned functionality for all keys where option doesn't have a particular effect on the keycode - for example for the arrow keys.



* Arrow keys with modifiers: standard Mac functionalities
DavidReitter: Assign standard functionalities to the arrow keys when pressed with particular modifiers (command, alt, etc.)


* Spell-Check with OS X
DavidReitter: Can someone implement an interface that queries the built-in OS X spellchecker? It would have to implement the ispell/aspell API, which should be too hard. Because such a thing would be small, we could easily distribute it with Aquamacs.

* Tabs (to switch buffers)
Anonymous: I suggest adding tabs. In addition or instead of having "show buffers in new frames" you could have "show new buffers in tab". This would allow very nice operation with LaTeX compilation etc. Also, I suggest flashing the tab name just like e.g. iTerm does when something changesâ€¦



Local variables:
mode: outline
mode: longlines
end:

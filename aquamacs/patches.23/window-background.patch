*** src/xdisp.c	26 Aug 2008 11:11:46 -0000	1.1149.2.33
--- src/xdisp.c	22 Dec 2008 00:03:30 -0000
***************
*** 15759,15765 ****
  	  it->len = 1;
  
  	  if (default_face_p)
! 	    it->face_id = DEFAULT_FACE_ID;
  	  else if (it->face_before_selective_p)
  	    it->face_id = it->saved_face_id;
  	  face = FACE_FROM_ID (it->f, it->face_id);
--- 15920,15926 ----
  	  it->len = 1;
  
  	  if (default_face_p)
! 	    it->face_id = lookup_basic_face (it->f, DEFAULT_FACE_ID); 
  	  else if (it->face_before_selective_p)
  	    it->face_id = it->saved_face_id;
  	  face = FACE_FROM_ID (it->f, it->face_id);
Index: nsterm.m
===================================================================
RCS file: /sources/emacs/emacs/src/nsterm.m,v
retrieving revision 1.39
diff -c -r1.39 nsterm.m
*** src/nsterm.m	28 Nov 2008 05:40:39 -0000	1.39
--- src/nsterm.m	22 Dec 2008 00:11:41 -0000
***************
*** 1803,1811 ****
        if (last_mouse_frame && FRAME_LIVE_P (last_mouse_frame))
          f = last_mouse_frame;
        else
!         f = dpyinfo->x_focus_frame ? dpyinfo->x_focus_frame
!                                     : SELECTED_FRAME ();
  
        if (f && f->output_data.ns)  /* TODO: 2nd check no longer needed? */
          {
            view = FRAME_NS_VIEW (*fp);
--- 1803,1817 ----
        if (last_mouse_frame && FRAME_LIVE_P (last_mouse_frame))
          f = last_mouse_frame;
        else
!         {
! 	  /*mouseLoc = [NSEvent mouseLocation];
  
+ CGFloat x = mouseLoc.x; // x location
+ CGFloat y = mouseLoc.y; // y location
+ 	  */
+ 	  f = dpyinfo->x_focus_frame ? dpyinfo->x_focus_frame
+                                     : SELECTED_FRAME ();
+ 	}
        if (f && f->output_data.ns)  /* TODO: 2nd check no longer needed? */
          {
            view = FRAME_NS_VIEW (*fp);
***************
*** 1978,1983 ****
--- 1984,1990 ----
    UNBLOCK_INPUT;
  }
  
+ extern struct buffer *current_buffer;
  
  void
  ns_clear_frame_area (struct frame *f, int x, int y, int width, int height)
***************
*** 1987,1997 ****
  {
    NSRect r = NSMakeRect (x, y, width, height);
    NSView *view = FRAME_NS_VIEW (f);
!   struct face *face = FRAME_DEFAULT_FACE (f);
  
    if (!view || !face)
      return;
  
    NSTRACE (ns_clear_frame_area);
  
    r = NSIntersectionRect (r, [view frame]);
--- 1994,2026 ----
  {
    NSRect r = NSMakeRect (x, y, width, height);
    NSView *view = FRAME_NS_VIEW (f);
!   struct face *face =  FRAME_DEFAULT_FACE (f);
!   struct buffer *old_buffer = NULL;
  
    if (!view || !face)
      return;
  
+   //   struct window *w = updated_window;
+   // is the current buffer correct?
+   if (updated_window && current_buffer)
+     {
+       if (XBUFFER (updated_window->buffer) != current_buffer)
+ 	{
+ 	  old_buffer = current_buffer;
+ 	  set_buffer_internal_1 (XBUFFER (updated_window->buffer));
+ 	}
+     
+   
+   int remapped_face = lookup_basic_face (f, DEFAULT_FACE_ID);
+   if (remapped_face)
+     face = FACE_FROM_ID (f, remapped_face);
+ 
+   if (old_buffer)
+     set_buffer_internal_1 (old_buffer);
+   }
+ 
+   //      face = lookup_basic_face (XFRAME (f), DEFAULT_FACE_ID);
+   
    NSTRACE (ns_clear_frame_area);
  
    r = NSIntersectionRect (r, [view frame]);
